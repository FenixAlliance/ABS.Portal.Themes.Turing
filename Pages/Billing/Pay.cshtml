@inherits FenixAlliance.ABS.Core.Templating.Templates.DynamicComponentBase
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, AuthoringTagHelpers

@using FenixAlliance.ABM.Models.Holders
@using FenixAlliance.ABM.Models.Accounting.Billing.Orders
@using FenixAlliance.ABM.Models.Accounting.Billing.Payments

@{
    ViewData["Title"] = "New Order Payment";
    var Order = (Order)ViewBag.Order;
    var payment = new FenixAlliance.ABM.Models.Accounting.Billing.Payments.Payment();

    var Holder = (AccountHolder)ViewBag.Holder;
    var TaxBase = Order.OrderTotalAmountInUSD - Order.OrderTotalTaxesInUSD;
}

<script type="text/javascript" src="/ui/lib/card/dist/jquery.card.js"></script>
<!-- Validate Phone -->
<script src="/ui/lib/intl-tel-input/build/js/intlTelInput.js"></script>
<script src="/ui/lib/intl-tel-input/build/js/utils.js"></script>
<link rel="stylesheet" href="/ui/lib/intl-tel-input/build/css/intlTelInput.css">

<script src="/ui/lib/cleave.js/dist/cleave.js"></script>
<script src="/ui/lib/cleave.js/dist/addons/cleave-phone.us.js"></script>

<style>
    #invoice {
        padding: 30px;
    }

    .invoice {
        position: relative;
        background-color: #FFF;
        min-height: 680px;
        padding: 15px
    }

        .invoice header {
            padding: 10px 0;
            margin-bottom: 20px;
            border-bottom: 1px solid #3989c6
        }

        .invoice .company-details {
            text-align: right
        }

            .invoice .company-details .name {
                margin-top: 0;
                margin-bottom: 0
            }

        .invoice .contacts {
            margin-bottom: 20px
        }

        .invoice .invoice-to {
            text-align: left
        }

            .invoice .invoice-to .to {
                margin-top: 0;
                margin-bottom: 0
            }

        .invoice .invoice-details {
            text-align: right
        }

            .invoice .invoice-details .invoice-id {
                margin-top: 0;
                color: #3989c6
            }

        .invoice main {
            padding-bottom: 50px
        }

            .invoice main .thanks {
                margin-top: -100px;
                font-size: 2em;
                margin-bottom: 50px
            }

            .invoice main .notices {
                padding-left: 6px;
                border-left: 6px solid #3989c6
            }

                .invoice main .notices .notice {
                    font-size: 1.2em
                }

        .invoice table {
            width: 100%;
            border-collapse: collapse;
            border-spacing: 0;
            margin-bottom: 20px
        }

            .invoice table td,
            .invoice table th {
                padding: 15px;
                background: #eee;
                border-bottom: 1px solid #fff
            }

            .invoice table th {
                white-space: nowrap;
                font-weight: 400;
                font-size: 16px
            }

            .invoice table td h3 {
                margin: 0;
                font-weight: 400;
                color: #3989c6;
                font-size: 1.2em
            }

            .invoice table .qty,
            .invoice table .total,
            .invoice table .unit {
                text-align: right;
                font-size: 1.2em
            }

            .invoice table .no {
                color: #fff;
                font-size: 1.6em;
                background: #3989c6
            }

            .invoice table .unit {
                background: #ddd
            }

            .invoice table .total {
                background: #3989c6;
                color: #fff
            }

            .invoice table tbody tr:last-child td {
                border: none
            }

            .invoice table tfoot td {
                background: 0 0;
                border-bottom: none;
                white-space: nowrap;
                text-align: right;
                padding: 10px 20px;
                font-size: 1.2em;
                border-top: 1px solid #aaa
            }

            .invoice table tfoot tr:first-child td {
                border-top: none
            }

            .invoice table tfoot tr:last-child td {
                color: #3989c6;
                font-size: 1.4em;
                border-top: 1px solid #3989c6
            }

            .invoice table tfoot tr td:first-child {
                border: none
            }

        .invoice footer {
            width: 100%;
            text-align: center;
            color: #777;
            border-top: 1px solid #aaa;
            padding: 8px 0
        }

    @@media print {
        .invoice {
            font-size: 11px !important;
            overflow: hidden !important
        }

            .invoice footer {
                position: absolute;
                bottom: 10px;
                page-break-after: always
            }

            .invoice > div:last-child {
                page-break-before: always
            }
    }
</style>
<style>
    .intl-tel-input {
        width: 100%;
    }

    .jp-card {
        min-width: 280px !important;
    }

        .jp-card .jp-card-front,
        .jp-card .jp-card-back {
            background: #002050;
        }
</style>

<form id="Card" asp-action="Create" asp-route-OrderID="@Order.ID">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <input type="hidden" name="CreditCardExpirationMonth" data-epayco="card[exp_month]" />
    <input type="hidden" name="CreditCardExpirationYear" data-epayco="card[exp_year]" />
    <input type="hidden" name="PaymentTokenDTO" />
    <input type="hidden" name="OrderID" />

    <div class="container">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-12">
                                <div id="invoice">
                                    <div class="invoice overflow-auto">
                                        <div style="min-width: 600px">
                                            <header>
                                                <div class="row">
                                                    <div class="col">
                                                        <a asp-area="" asp-controller="Home" asp-action="Index">
                                                            <img src="/images/FenixAlliance/Branding/shaphire-text-dark-80x440.png" style="max-height:40px;" data-holder-rendered="true" />
                                                        </a>
                                                    </div>
                                                    <div class="col company-details">
                                                        <h2 class="name">
                                                            <a asp-area="" asp-controller="Home" asp-action="Index">
                                                                @Portal.Options.Seo.Organization.LegalName
                                                            </a>
                                                        </h2>
                                                        <div>NIT: <b>900.301.001 - 4</b></div>
                                                        <div>Tel: <a href="tel:+12065886716">2065886716</a></div>
                                                        <div>
                                                            Email: <a href="mailto:@Portal.Options.Seo.Organization.LegalName">@Portal.Options.Seo.Organization.LegalName</a>
                                                        </div>
                                                        <div>
                                                            @Portal.Options.Seo.Organization
                                                        </div>
                                                        <div>Tunja, Boy. Colombia.</div>
                                                    </div>
                                                </div>
                                            </header>
                                            <main>
                                                <div class="row contacts">
                                                    <div class="col invoice-to">
                                                        <div class="text-gray-light">ORDER OWNER:</div>
                                                        <h2 class="to"> @User.Identity.Name</h2>
                                                        <div class="address"><a>Add an address</a></div>
                                                        <div class="email">
                                                            <a href="mailto:@Holder.Email">@Holder.Email</a>
                                                        </div>
                                                    </div>
                                                    <div class="col invoice-details">
                                                        <h1 class="invoice-id " style="color:red">UNPAID</h1>
                                                        <div class="date"><b>Valid Until</b>: @Order.Timestamp.AddDays(3)</div>
                                                        <div class="date"><b>Created Date</b>: @Order.Timestamp</div>
                                                        <div class="date">
                                                            <b>Order Reference</b>: @Order.ID
                                                        </div>
                                                    </div>
                                                </div>
                                                <table border="0" cellspacing="0" cellpadding="0">
                                                    <thead>
                                                        <tr>
                                                            <th>SKU</th>
                                                            <th class="text-left">PRODUCT DESCRIPTION</th>
                                                            <th class="text-left">PRICE</th>
                                                            <th class="text-center">QUANTITY</th>
                                                            <th class="text-center">TOTAL</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @foreach (var ProductOrderRegistration in Order.ItemOrderRecords)
                                                        {
                                                            <tr>
                                                                <td class="no">@ProductOrderRegistration.Item.SKU</td>
                                                                <td class="text-left">
                                                                    <h3>
                                                                        <a target="_blank" href="/Store/Products/Details/@ProductOrderRegistration.Item.ID">
                                                                            @ProductOrderRegistration.Item.Title
                                                                        </a>
                                                                    </h3>

                                                                    @Html.Raw(ProductOrderRegistration.Item.ShortDescription)

                                                                    <h5>Applied Taxes:</h5>
                                                                    @foreach (var AppliedTax in ProductOrderRegistration.OrderAppliedTaxPolicyRecords)
                                                                    {
                                                                        <p><b>@AppliedTax.TaxPolicy.Title</b></p>
                                                                    }
                                                                </td>
                                                                @if (ProductOrderRegistration.Item.OnDiscount)
                                                                {
                                                                    <td class="unit">
                                                                        @await Component.InvokeAsync("ItemPrice", new
                                                                        {
                                                                            ProductOrderRegistration.Item,
                                                                            DisplayDiscountPrice = true,
                                                                            PrintUnformatted = false
                                                                        })
                                                                    </td>
                                                                    <td class="qty">
                                                                        @await Component.InvokeAsync("Price", new
                                                                        {
                                                                            Amount = TaxBase,
                                                                            Currency = "USD",
                                                                            PrintUnformatted = false
                                                                        })
                                                                    </td>
                                                                }
                                                                else
                                                                {
                                                                    <td class="unit">
                                                                        @await Component.InvokeAsync("ItemPrice", new
                                                                        {
                                                                            ProductOrderRegistration.Item,
                                                                            DisplayDiscountPrice = false,
                                                                            PrintUnformatted = false
                                                                        })
                                                                    </td>
                                                                    <td class="qty">@ProductOrderRegistration.Quantity</td>
                                                                    <td class="total">
                                                                        @await Component.InvokeAsync("Price", new
                                                                        {
                                                                            Amount = (ProductOrderRegistration.Item.RegularPrice * ProductOrderRegistration.Quantity),
                                                                            Currency = ProductOrderRegistration.Item.CurrencyID,
                                                                            PrintUnformatted = false
                                                                        })
                                                                    </td>
                                                                }
                                                            </tr>
                                                        }
                                                    </tbody>
                                                    <tfoot>
                                                        <tr>
                                                            <td colspan="2"></td>
                                                            <td colspan="2">SUBTOTAL</td>
                                                            <td>
                                                                @await Component.InvokeAsync("Price", new
                                                                {
                                                                    Amount = TaxBase,
                                                                    Currency = "USD",
                                                                    PrintUnformatted = false
                                                                })
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td colspan="2"></td>
                                                            <td colspan="2">TAX</td>
                                                            <td>
                                                                @await Component.InvokeAsync("Price", new
                                                                {
                                                                    Amount = Order.OrderTotalTaxesInUSD,
                                                                    Currency = "USD",
                                                                    PrintUnformatted = false
                                                                })
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td colspan="2"></td>
                                                            <td colspan="2">GRAND TOTAL</td>
                                                            <td>
                                                                @await Component.InvokeAsync("Price", new
                                                                {
                                                                    Amount = Order.OrderTotalAmountInUSD,
                                                                    Currency = "USD",
                                                                    PrintUnformatted = false
                                                                })
                                                            </td>
                                                        </tr>
                                                    </tfoot>
                                                </table>
                                                <div class="thanks">Thank you for your business!</div>
                                                <div class="notices">
                                                    <div>NOTICE:</div>
                                                    <div class="notice">
                                                        Your order will be processed in US dollars. Prices
                                                        before VAT, except Cloud products by subscription, which are excluded
                                                        from VAT. For all modalities of licensing and recurring payments, it
                                                        will be billed to the TRM of the US Dollar on the billing day.
                                                    </div>
                                                </div>
                                            </main>
                                            <footer>
                                                This order id valid was digitally expedited and is valid without the signature
                                                and seal.
                                            </footer>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="card">
                    <div class="card-body">
                        <div class="row">

                            <div class="col-md-4">
                                <div class="form-group">
                                    <label class="control-label">Billing Email</label>
                                    <input name="Email" type="email" value="@Holder.Email" readonly class="form-control" data-epayco="card[email]">
                                    <span name="Email" class="text-danger"></span>
                                </div>
                            </div>

                            <div class="col-md-2">
                                <div class="form-group">
                                    <label class="control-label">Official ID Type</label>
                                    <select name="OfficialIDType" class="form-control" asp-items="ViewBag.LocationID">
                                        <option value="CC">CC</option>
                                        <option value="NIT">NIT</option>
                                    </select>

                                </div>
                            </div>

                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="control-label">Official ID</label>

                                    <label name="OfficialID" class="control-label"></label>
                                    <input name="OfficialID" type="text" class="form-control" />
                                </div>
                            </div>

                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="control-label">Official ID Expedition Date</label>
                                    <label name="OfficialIDExpeditionDate" class="control-label"></label>
                                    <input name="OfficialIDExpeditionDate" type="date" class="form-control" />
                                </div>
                            </div>

                            <div class="col-md-3">
                                <div class="form-group ">
                                    <label name="Country" class="control-label">Country</label>
                                    <select name="Country" class=" form-control" asp-items="ViewBag.CountryID"></select>
                                </div>
                            </div>

                            <div class="col-md-3">
                                <div class="form-group">
                                    <label name="BillingAddress" class="control-label">Billing Address</label>
                                    <input name="BillingAddress" type="text" class="form-control" />
                                </div>
                            </div>

                            <div class="col-md-2">
                                <div class="form-group">
                                    <label name="City" class="control-label">City</label>
                                    <input name="City" type="text" class="form-control" />
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group">
                                    <label name="Department" class="control-label">Department</label>
                                    <input name="Department" type="text" class="form-control" />
                                </div>
                            </div>

                            <div class="col-md-2">
                                <div class="form-group ">
                                    <label name="Country" class="control-label">Location</label>
                                    <select name="Country" class=" form-control" asp-items="ViewBag.LocationID"></select>
                                </div>
                            </div>


                            <div class="col-md-6">
                                <div class="form-group ">
                                    <label name="Cellphone" class="control-label"></label>
                                    <input name="Cellphone" required id="cellphone" class="form-control" />
                                    <span name="Cellphone" class="text-danger"></span>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group ">
                                    <label name="Phone" class="control-label"></label>
                                    <input name="Phone" id="phone" class="form-control" />
                                    <span name="Phone" class="text-danger"></span>
                                </div>
                            </div>


                        </div>
                    </div>
                </div>

                <div class="card">
                    <div class="card-body">
                        <!--  CARD DETAILS -->
                        <div class="row">
                            <div class="col-md-6">
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group ">
                                            <label name="CreditCardNumber" class="control-label">Credit Card Number</label>
                                            <input name="CreditCardNumber" id="CreditCardNumber" type="text" data-epayco="card[number]" class="form-control cardNumber" />
                                            <span name="CreditCardNumber" class="text-danger"></span>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group ">
                                            <label name="InCreditCardFirstName" class="control-label">Cardholder First Name</label>
                                            <input name="InCreditCardFirstName" id="OnCardFirstName" type="text" placeholder="First Name" class="form-control" required />
                                            <span name="InCreditCardFirstName" class="text-danger"></span>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group ">
                                            <label name="InCreditCardLastName" class="control-label">Cardholder Last Name</label>
                                            <input name="InCreditCardLastName" id="OnCardLastName" required placeholder="Last Name" type="text" class="form-control" />
                                            <span name="InCreditCardLastName" class="text-danger"></span>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div id="CCDateFormInput" class="form-group">
                                            <label name="CreditCardExpirationDate" class="control-label">Expiration Date</label>
                                            <input id="CreditCardExpirationDate" name="CreditCardExpirationDate" type="text" placeholder="MM/YY" class="form-control" />
                                            <span name="CreditCardExpirationDate" class="text-danger"></span>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label name="CreditCardCVC" class="control-label">CVC</label>
                                            <input id="CreditCardCVC" name="CreditCardCVC" type="text" class="form-control " size="4" data-epayco="card[cvc]">
                                            <span name="CreditCardCVC" class="text-danger"></span>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group ">
                                            <label name="Quotes" class="control-label">Quotes</label>
                                            <input name="Quotes" type="text" class="form-control " />
                                            <span name="Quotes" class="text-danger"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div style="max-width:100%" class='card-wrapper'></div>
                            </div>
                        </div>
                        <!-- Billing Details -->

                        <button type="submit" class="btn btn-blue btn-lg w-100">
                            Pay (@await Component.InvokeAsync("Price", new
                                {
                                    Amount = Order.OrderTotalAmountInUSD,
                                    Currency = "USD",
                                    PrintUnformatted = false
                                }))
                        </button>

                    </div>
                </div>
            </div>
        </div>
    </div>
</form>


<script>
    $('#select-country').chosen({ width: "95%" })
    $('#Card').submit(function (event) {
        //captura el contenido del formulario
        var $form = $('#Card');
        //deshabilita el botón para no acumular peticiones
        $form.find("button").prop("disabled", true);
        // Prevent form submit
        event.preventDefault();
        // Set Credit Card Moth and Year
        var CreditCardExpirationYear = document.querySelector("#CreditCardExpirationYear");
        var CreditCardExpirationMonth = document.querySelector("#CreditCardExpirationMonth");
        var CreditCardExpirationDate = document.querySelector("#CreditCardExpirationDate");
        var CCDate = CreditCardExpirationDate.value.split("/");
        CreditCardExpirationYear.value = "20" + CCDate[1];
        CreditCardExpirationMonth.value = CCDate[0];
        ////// Trim cc spaces
        var ccnumber = $('#CreditCardNumber').val().replace(/\s+/g, '');
        $('#CreditCardNumber').val(ccnumber);
        // Validate at least one phone number
        if (!iti.isValidNumber() && !icll.isValidNumber()) {
            toastr.error(iti.getNumber() + ' Is not a valid international phone number. Please enter a number in an international format.', 'At least one phone number must pass validation.');
            return false;
        } else {
            if (iti.isValidNumber()) {
                phone.value = iti.getNumber();
                cellphone.value = iti.getNumber();
            }
            else {
                phone.value = icll.getNumber();
                cellphone.value = icll.getNumber();
            }
        }
        $('#Card').get(0).submit();
    });
</script>
<script>

    // Adds Card.js
    var card = new Card({
        // a selector or DOM element for the form where AccountHolders will
        // be entering their information
        form: 'form', // *required*
        // a selector or DOM element for the container
        // where you want the card to appear
        container: '.card-wrapper', // *required*

        formSelectors: {
            numberInput: 'input#CreditCardNumber',
            expiryInput: 'input#CreditCardExpirationDate',
            cvcInput: 'input#CreditCardCVC',
            nameInput: 'input[name="InCreditCardFirstName"], input[name="InCreditCardLastName"]'
        },
        formatting: true, // optional - default true
        // Strings for translation - optional
        messages: {
            validDate: 'valid\ndate', // optional - default 'valid\nthru'
            monthYear: 'mm/yy', // optional - default 'month/year'
        },
        // Default placeholders for rendered fields - optional
        placeholders: {
            number: '•••• •••• •••• ••••',
            name: 'FULL NAME',
            expiry: '••/••',
            cvc: '•••'
        },
        masks: {
            cardNumber: '•'
        },
    });


    //// Format & Validate Card Number
    document.querySelectorAll('.cardNumber').forEach(function (el) {
        new Cleave(el, { creditCard: true });
    });

    // Validate Expiration Date
    var CreditCardExpirationDateCleave = new Cleave('#CreditCardExpirationDate', {
        date: true,
        datePattern: ['m', 'y']
    });


    // Phone validation vars
    var cellphone = document.querySelector("#cellphone");
    var phone = document.querySelector("#phone");
    var iti = window.intlTelInput(phone, {
        autoHideDialCode: false,
        nationalMode: true,
        utilsScript: "/ui/lib/intl-tel-input/build/js/utils.js",
    });
    var icll = window.intlTelInput(cellphone, {
        autoHideDialCode: false,
        nationalMode: true,
        utilsScript: "/ui/lib/intl-tel-input/build/js/utils.js",
    });
</script>